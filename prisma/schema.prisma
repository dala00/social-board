// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Application {
  id              String           @id @default(cuid())
  userId          String
  name            String
  description     String
  iconFileName    String
  imageFileName   String
  user            User             @relation(fields: [userId], references: [id])
  applicationUrls ApplicationUrl[]
  sheets          Sheet[]
  tasks           Task[]
}

model ApplicationUrl {
  id            String      @id @default(cuid())
  applicationId String
  name          String
  url           String
  application   Application @relation(fields: [applicationId], references: [id])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Sheet {
  id            String      @id @default(cuid())
  userId        String
  applicationId String
  name          String
  displayOrder  Int
  application   Application @relation(fields: [applicationId], references: [id])
  user          User        @relation(fields: [userId], references: [id])
  tasks         Task[]
}

model Task {
  id            String      @id @default(cuid())
  applicationId String
  sheetId       String
  userId        String
  name          String
  body          String
  displayOrder  Int
  application   Application @relation(fields: [applicationId], references: [id])
  sheet         Sheet       @relation(fields: [sheetId], references: [id])
  user          User        @relation(fields: [userId], references: [id])
}

model User {
  id            String        @id @default(cuid())
  name          String?
  uniqueId      String?       @unique
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  accounts      Account[]
  sessions      Session[]
  sheets        Sheet[]
  tasks         Task[]
  applications  Application[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
