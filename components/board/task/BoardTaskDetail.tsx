import { Box, Button, Divider, Flex, useColorModeValue } from '@chakra-ui/react'
import axios from 'axios'
import Head from 'next/head'
import { useRouter } from 'next/router'
import React, { useCallback, useMemo } from 'react'
import { useBoard } from '../../../hooks/board'
import BoardApplications from '../BoardApplications'
import BoardHeader from '../BoardHeader'
import BoardTaskApplication from './BoardTaskApplication'
import BoardTaskBody from './BoardTaskBody'
import BoardTaskName from './BoardTaskName'

export default function BoardTaskDetail() {
  const router = useRouter()
  const { applicationId, deleteTask, taskId, getTask, sheets, userId } =
    useBoard()
  const task = useMemo(() => getTask(taskId), [taskId])

  const archive = useCallback(async () => {
    if (!confirm('アーカイブしてよろしいですか？')) {
      return
    }

    await axios.patch(`/api/tasks/${taskId}/archive`)
    deleteTask(taskId)
    router.push(`/board/${userId}/${applicationId}`)
  }, [sheets])

  if (!task) {
    return <></>
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box as="main" backgroundColor={useColorModeValue('blue.100', undefined)}>
        <BoardHeader />
        <Flex>
          <BoardApplications />
          <Box p={4} width="100%">
            <Flex mb={4} justifyContent="space-between">
              <BoardTaskName />
              <Box>
                <BoardTaskApplication key={task.id} />
              </Box>
            </Flex>

            <Divider borderColor={useColorModeValue('gray.700', 'gray.200')} />

            <Box
              background={useColorModeValue('white', 'gray.900')}
              borderRadius={10}
              maxWidth={700}
              mt={4}
              p={4}
            >
              <BoardTaskBody />
            </Box>
            <Box mt={8}>
              <Button colorScheme="red" type="button" onClick={() => archive()}>
                アーカイブ
              </Button>
            </Box>
          </Box>
        </Flex>
      </Box>
    </>
  )
}
